version: '3.8'

services:
  # MySQL Database
  db:
    image: mysql:8.0
    container_name: dashboard-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: dashboard_esportivo
      MYSQL_USER: dashboard_user
      MYSQL_PASSWORD: dashboard_password
    ports:
      - \"3306:3306\"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - dashboard-network
    healthcheck:
      test: [\"CMD\", \"mysqladmin\", \"ping\", \"-h\", \"localhost\"]
      timeout: 20s
      retries: 10

  # Redis Cache (optional)
  redis:
    image: redis:7-alpine
    container_name: dashboard-redis
    restart: unless-stopped
    ports:
      - \"6379:6379\"
    volumes:
      - redis_data:/data
    networks:
      - dashboard-network
    healthcheck:
      test: [\"CMD\", \"redis-cli\", \"ping\"]
      timeout: 3s
      retries: 5

  # Backend API
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: dashboard-api
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 3000
      DATABASE_URL: mysql://dashboard_user:dashboard_password@db:3306/dashboard_esportivo
      JWT_SECRET: your-super-secret-jwt-key-here-change-in-production
      LOG_LEVEL: debug
      CORS_ORIGIN: \"http://localhost:3001,http://localhost:5173\"
      ENABLE_SWAGGER: \"true\"
    ports:
      - \"3000:3000\"
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    depends_on:
      db:
        condition: service_healthy
    networks:
      - dashboard-network
    healthcheck:
      test: [\"CMD\", \"curl\", \"-f\", \"http://localhost:3000/api/health\"]
      timeout: 3s
      retries: 5
      start_period: 30s

  # Nginx Reverse Proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: dashboard-nginx
    restart: unless-stopped
    ports:
      - \"80:80\"
      - \"443:443\"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - api
    networks:
      - dashboard-network

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  dashboard-network:
    driver: bridge